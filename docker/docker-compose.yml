services:
  preprocess:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.classical-ml
      context: ../
    command: '/fraud-detection/wrapper.sh --preprocess'
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-classical-ml
    privileged: true
    volumes:
      - ${DATASET_DIR}/raw_data:/workspace/data/raw_data
      - ${OUTPUT_DIR}/data/edge_data:/workspace/data/edge_data
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/workspace/configs
    working_dir: /fraud-detection/classical-ml
  gnn-analytics:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.gnn-analytics
      context: ../
    command: '/fraud-detection/wrapper.sh --gnn-analytics'
    environment:
      - http_proxy:${http_proxy}
      - https_proxy:${https_proxy}
      - no_proxy:${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-gnn
    network_mode: "host"
    privileged: true
    shm_size: 200GB
    volumes:
      - ${OUTPUT_DIR}/data/edge_data:/DATA_IN
      - ${OUTPUT_DIR}/data/node_edge_data:/DATA_OUT
      - ${OUTPUT_DIR}/gnn_checkpoint:/GNN_TMP
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/CONFIGS
    working_dir: /
  baseline-training:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.classical-ml
      context: ../
    command: '/fraud-detection/wrapper.sh --baseline-training'
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-classical-ml
    privileged: true
    volumes:
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/workspace/configs
      - ${OUTPUT_DIR}/data/edge_data:/workspace/data/edge_data
      - ${OUTPUT_DIR}/baseline/models:/workspace/tmp/models
      - ${OUTPUT_DIR}/baseline/logs:/workspace/tmp/logs
    working_dir: /fraud-detection/classical-ml
  xgb-training:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.classical-ml
      context: ../
    command: '/fraud-detection/wrapper.sh --xgb-training'
    depends_on:
     gnn-analytics:
       condition: service_completed_successfully
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-classical-ml
    privileged: true
    volumes:
      - ${OUTPUT_DIR}/data/node_edge_data:/workspace/data/node_edge_data
      - ${OUTPUT_DIR}/xgb-training/models:/workspace/tmp/models
      - ${OUTPUT_DIR}/xgb-training/logs:/workspace/tmp/logs
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/workspace/configs
    working_dir: /fraud-detection/classical-ml
  dev-gnn-analytics:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.gnn-analytics
      context: ../
    command: '${SCRIPT:-/fraud-detection/wrapper.sh} ${PARAMETER:---gnn-analytics}'
    environment:
      - http_proxy:${http_proxy}
      - https_proxy:${https_proxy}
      - no_proxy:${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-gnn
    network_mode: "host"
    privileged: true
    stdin_open: true
    tty: true
    shm_size: ${SHM_SIZE:-200GB}
    volumes:
      - ${WORKSPACE:-$PWD/../gnn-analytics}:/host
      - ${OUTPUT_DIR}/data/edge_data:/DATA_IN
      - ${OUTPUT_DIR}/data/node_edge_data:/DATA_OUT
      - ${OUTPUT_DIR}/gnn_checkpoint:/GNN_TMP
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/CONFIGS
      - $PWD/../wrapper.sh:/fraud-detection/wrapper.sh
    working_dir: /
  dev-baseline-training:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.classical-ml
      context: ../
    command: '${SCRIPT:-/fraud-detection/wrapper.sh} ${PARAMETER:---baseline-training}'
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-classical-ml
    privileged: true
    stdin_open: true
    tty: true
    volumes:
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/workspace/configs
      - ${OUTPUT_DIR}/data/edge_data:/workspace/data/edge_data
      - ${OUTPUT_DIR}/baseline/models:/workspace/tmp/models
      - ${OUTPUT_DIR}/baseline/logs:/workspace/tmp/logs
      - ${WORKSPACE:-$PWD/../classical-ml}:/fraud-detection/classical-ml
      - $PWD/../wrapper.sh:/fraud-detection/wrapper.sh
    working_dir: /fraud-detection/classical-ml
  dev-xgb-training:
    build:
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
      dockerfile: docker/Dockerfile.classical-ml
      context: ../
    command: '${SCRIPT:-/fraud-detection/wrapper.sh} ${PARAMETER:---xgb-training}'
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - no_proxy=${no_proxy}
    image: SelimWaly/ai-workflows:pa-fraud-detection-classical-ml
    privileged: true
    stdin_open: true
    tty: true
    volumes:
      - ${CONFIG_DIR:-$PWD/../configs/single-node}:/workspace/configs
      - ${OUTPUT_DIR}/data/node_edge_data:/workspace/data/node_edge_data
      - ${OUTPUT_DIR}/xgb-training/models:/workspace/tmp/models
      - ${OUTPUT_DIR}/xgb-training/logs:/workspace/tmp/logs
      - ${WORKSPACE:-$PWD/../classical-ml}:/fraud-detection/classical-ml
      - $PWD/../wrapper.sh:/fraud-detection/wrapper.sh
    working_dir: /fraud-detection/classical-ml
